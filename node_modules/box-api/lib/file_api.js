var File = require('./file');
var debug = require('debug')('box-api:file-api');

function FileAPI(client) {
  this.client = client;
}

FileAPI.prototype.get = function(fileId, callback) {
  var client = this.client;
  client.request.get({
    json: true,
    url: 'files/' + fileId
  }, function(err, response, body) {
    var data = !err && new File(client, body);
    callback(err, data);
  });
};

FileAPI.prototype.upload = function(file, options, callback) {
  var headers = {};
  var client = this.client;
  if (options.sha1) {
    headers['Content-MD5'] = options.sha1;
    delete options.sha1;
  }

  debug('uploading file with options %j', options);
  client.uploadRequest.post({
    formData: {
      attributes: JSON.stringify(options),
      file: file
    },
    headers: headers,
    json: true,
    url: 'files/content'
  }, function(err, response, body) {
    if (!err && response.statusCode !== 201) {
      err = new Error(response.statusCode + ': ' + response.statusMessage);
      debug('error: non-201 status code. %j', body);
    }
    var data = !err && new File(client, body.entries[0]);
    callback(err, data);
  });
};

FileAPI.prototype.update = function(fileId, file, options, callback) {
  var headers = {};
  var client = this.client;
  if (typeof options === 'function') {
    callback = options;
    options = {};
  }
  if (options.etag) {
    headers['If-Match'] = options.etag;
    delete options.etag;
  }
  if (options.sha1) {
    headers['Content-MD5'] = options.sha1;
    delete options.sha1;
  }

  debug('updating file ID %d with options %j', fileId, options);
  client.uploadRequest.post({
    formData: {
      attributes: JSON.stringify(options),
      file: file
    },
    headers: headers,
    json: true,
    url: 'files/' + fileId + '/content'
  }, function(err, response, body) {
    if (!err && response.statusCode !== 201) {
      err = new Error(response.statusCode + ': ' + response.statusMessage);
      debug('error: non-201 status code. %j', body);
    }
    var data = !err && new File(client, body.entries[0]);
    callback(err, data);
  });
};

module.exports = FileAPI;
